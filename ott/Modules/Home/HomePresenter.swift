//
//  HomePresenter.swift
//  ott
//
//  Created by dpsmac1 on 24-04-18.
//  Copyright (c) 2018 Digitalproserver. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class HomePresenter {

    // MARK: - Private properties -
    
    private unowned var _view: HomeViewInterface
    private var _interactor: HomeInteractorInterface
    private var _wireframe: HomeWireframeInterface

    // MARK: - Lifecycle -

    init(wireframe: HomeWireframeInterface, view: HomeViewInterface, interactor: HomeInteractorInterface) {
        _wireframe = wireframe
        _view = view
        _interactor = interactor
    }
     
     func viewDidLoad() {
          fetchCategories()
          fetchHighlights()
     }
}

// MARK: - Extensions -

extension HomePresenter: HomePresenterInterface {
    func showSideMenu() {
        _view.showSideMenu()
    }
}




// MARK: - Categories
extension HomePresenter {
    func fetchCategories() {
        _view.showLoadingIndicator()
        _interactor.fetchCategories()
    }
    
    func successFetchingCategories(_ categories: [Category]) {
        _view.categories = categories
        _view.hideLoadingIndicator()
    }
    
    func failureFetchingCategories(_ error: Error?) {
        let errStr = String(describing: error)
        print("Error: \(errStr)")
        
        _view.hideLoadingIndicator()
    }
}




// MARK: - Highlights
extension HomePresenter {
    func fetchHighlights() {
        _view.showLoadingIndicator()
        _interactor.fetchHighlights()
    }
    
    func successFetchingHighlights(_ highlights: [Media]) {
        _view.highlights = highlights
        _view.hideLoadingIndicator()
    }
    
    func failureFetchingHighlights(_ error: Error?) {
        let errStr = String(describing: error)
        print("Error: \(errStr)")
        
        _view.hideLoadingIndicator()
    }
}




// MARK: - Details
extension HomePresenter: HomePagerSlideDelegate {
     func goToDetails(media: Media) {
          _wireframe.navigate(to: .details(media))
     }
     
     func didSelectHighlight(_ highlight: Media) {
          goToDetails(media: highlight)
     }
}
